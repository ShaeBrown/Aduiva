<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
ii=0;
global.armycount=60; 
transfer=false;
u=0;
army_count=60  //how many army players are available?
global.num=0;  //change to an array?
global.marker=false;                                                //show marker?
global.grid=mp_grid_create(0,0,room_width/16,room_height/16,16,16); //create grid
mp_grid_add_instances(global.grid,obj_solid,1); //add solids to pathfinding gid
global.furnacedraw=false;
global.sawdraw=false;
global.grouppath=ds_list_create();
global.commui=false;
global.count=0;
global.dx=0
global.dy=0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.count&gt;0 {
    instance_create(obj_commanderhut.x,obj_commanderhut.y + 20,obj_armyleader);
    global.count--
    alarm[1]=30;
}
else {
    global.dx=0
    global.dy=0
    global.armycount-=global.count;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tranfer from Gatherer to Crafter
if (u=20) {                                               //if the text rises 20 pixels
        u=0;
        if ii&lt;array_height_2d(global.gathinv)-1 {
            global.crafinv[ii,1]=global.gathinv[ii,1];    //transfer
            global.gathinv[ii,1]=0;
            alarm[0]=2; 
            ii++;   
        }
        else if ii=array_height_2d(global.gathinv)-1{  
            global.crafinv[ii,1]=global.gathinv[ii,1];    //transfer
            global.gathinv[ii,1]=0;                       //set to 0
            transfer=false;                               //stop transfer
            ii=0;                                         //next resource
          
        }
                                   
}

else {
    u+=1;                                       //rise the text
    alarm[0]=2
}

        
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create minions in gui
var i;
 for (i=1;i&lt;=global.armycount;i+=1) {
             instance_create(view_xview[2]+25+((i mod 20)*25),view_yview[2]+25+((i div 20))*25,obj_armygui);  //loop that draws number of army in columns and rows
             global.num=i;
  }
  

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw each screens gui
if (view_current=2)  {
    if global.commui=true {
        draw_set_alpha(0.1);
        draw_rectangle_color(view_xview[2],view_yview[2],view_xview[2]+640,view_yview[2]+100,c_black,c_black,c_black,c_black,0); //draw armycount gui
        draw_set_alpha(1);     
}
}

if global.gathshowinv=1 {
    if (view_current==0) {
        for (var i=0;i+1&lt;=array_height_2d(global.gathinv);i++) {
            draw_text(view_xview[0]+10,view_yview[0]+25+i*30,global.gathinv[i,0])
            draw_text(view_xview[0]+75,view_yview[0]+25+i*30,global.gathinv[i,1])
        }
        draw_set_alpha(0.1)
        draw_rectangle_colour(view_xview[0],view_yview[0],view_xview[0]+100,view_yview[0]+view_hview[0],"","","","",0);
        draw_set_alpha(1);
    }
}

if transfer=true {
    if ii&lt;array_height_2d(global.gathinv) {
        if global.gathinv[ii,1]&gt;0 {
            if view_current==0 {
            draw_text(obj_crafterhut.x+60,obj_crafterhut.y-u,"+" + string(global.gathinv[ii,0]) + "   " + string(global.gathinv[ii,1]))
            }
            
            draw_sprite(spr_triangle,-1,view_xview[3]+25,view_yview[3]+25);
            
            draw_text(view_xview[3]+50,view_yview[3]+25,"+" + string(global.gathinv[ii,0]) + "   " + string(global.gathinv[ii,1]))
        }
        else {
            ii+=1;
            }
        }
    else {
        ii=0;
        transfer=false;
    }
}
        




///Crafter inventory
if global.invui=true {
    draw_sprite(spr_ui_inv,0,view_xview[3],view_yview[3]);
    var space,height,length,indent;
    indent=144;
    space=100;
    length=5;
    height=4;
    for (var i=0;i&lt;array_height_2d(global.crafinv);i++) {
        draw_text(view_xview[3]+144+(i mod length)*100,view_yview[3]+100+(i div height)*100,global.crafinv[i,1])
        
    }
    
     for (var i=0;i&lt;array_height_2d(global.crafinv);i++) {
        draw_text(view_xview[3]+100+(i mod length)*100,view_yview[3]+75+(i div height)*100,global.crafinv[i,0])
        
    }
}
if global.sawui=true {
    draw_sprite(spr_inv_shrink,0,view_xview[3],view_yview[3]);
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
