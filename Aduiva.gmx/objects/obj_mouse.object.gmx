<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_waypoint</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
clickx=0  //x cordinate of click
clicky=0  //y cordinates of click
drawbox=false //draw the selection rectangle
x=mouse_x           //sets x and y on cursor
y=mouse_y
screen_speed=0      //speed the view moves at
distance=0          //distance away from mouse
xx=window_mouse_get_x();    //mouse cordinates relative to screen, not room
yy=window_mouse_get_y();     
friction=0.5        //slowly comes to stop when outside view
build=0             //build mode active
inside_view=0       //which view is the mouse in
global.wallrotation=0           //wall orientation
global.build=true;         
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Commander: Follow mouse, create waypoint, view boundaries

if inside_view=2 {                                  //cancel if mouse is not in view 2

    screen_speed=(distance/25)    
    distance=distance_to_point(mouse_x,mouse_y)             //move invisable mouse object towards the mouse, faster if the mouse is further            
    move_towards_point(mouse_x,mouse_y,screen_speed)        //the view follows     
                                                            //speed is the distance the mouse is divided by fifty                       

    if mouse_check_button_pressed(mb_right) {                          //when mouse is clicked
                    instance_create(mouse_x,mouse_y,obj_waypoint)   //and create another one
    }
}

if y&gt;1800                                               //prevents the view from reaching crafter hut
{y=yprevious}


    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Builder



if inside_view=1 {        //cancel if mouse is not in view 1

    if mouse_check_button_pressed(mb_left) then  {
        if global.build=true {
            instance_create(mouse_x,mouse_y,obj_wall) //makes a wall when you click at the mouse, snapped to grid
        }
    }



if mouse_wheel_down() or mouse_wheel_up() {
    global.wallrotation++
    if global.wallrotation&gt;3 {
    global.wallrotation=0  
    
    }
}
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///What view is the mouse in

xx=window_mouse_get_x();        //gets x and y relative to the screen, not the room
yy=window_mouse_get_y();


if xx&lt;640 &amp;&amp; yy&gt;480 {           //if mouse is in view 2 or not
    inside_view=2
}

if xx&gt;640 &amp;&amp; yy&lt;480 {           //if mouse is in view 2 or not
    inside_view=1
}

if xx&lt;640 &amp;&amp; yy&lt;480 {
    inside_view=0
}

if xx&gt;640 &amp;&amp; yy&gt;480 {
    inside_view=3
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get rectangle cordinates
if inside_view==2 || inside_view=4 {
    clickx=mouse_x
    clicky=mouse_y
    drawbox=1
    alarm[0]=1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw build option

    if view_current=1{
        if inside_view=1 {
            draw_sprite(global.wall[global.wallrotation],0,mouse_x,mouse_y)
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw commanders selection
if view_current ==2 {
if drawbox == true {
    draw_rectangle_color(clickx,clicky,mouse_x,mouse_y,c_white,c_white,c_white,c_white,true);
        draw_set_alpha(.1);
        draw_rectangle_color(clickx,clicky,mouse_x,mouse_y,c_white,c_white,c_white,c_white,false);
        draw_set_alpha(1);
    }
    
    if(!mouse_check_button(mb_left)) {
        drawbox = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
