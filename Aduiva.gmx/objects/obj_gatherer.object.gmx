<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gatherer_idle_down</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create variables
h=10000;
friction=0.5 //the friction is essential to stop the motion added the player and makes a more natural looking stop
move=1       //1 is true, 0 is false. Is the player allowed to move? Used to diable movement controls when attacking or during a tutorial etc.
dir=270      //set by the movement keys, starts facing down
max_speed=3  //limits the players speed
             //number of wood
max_wood=50  //maximum carrying
global.gathinv[0,0]=spr_icon_wood
global.gathinv[0,1]=0;
global.gathshowinv=false;
global.gathinv[1,0]=spr_icon_rock
global.gathinv[1,1]=0;
global.gathinv[2,0]=spr_soul_icon
global.gathinv[2,1]=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement controls
if move=0 exit;                            //cancels movement controls if move is false

var upkey, downkey, rightkey, leftkey;
                                          //these are temporary variables
upkey = keyboard_check(vk_up);           //they are directly related to which key is pressed
downkey = keyboard_check(vk_down);      //and only exist when they are pressed
rightkey = keyboard_check(vk_right);
leftkey = keyboard_check(vk_left);

up = (upkey &amp;&amp; !(leftkey || rightkey || downkey));      //these are the permanent variables
left = (leftkey &amp;&amp; !(upkey || rightkey || downkey));    //they are true when the temparary variables exist
right = (rightkey &amp;&amp; !(upkey || leftkey || downkey));   //allows only one movement direction at a time
down = (downkey &amp;&amp; !(upkey || leftkey || rightkey));

if up then                  //Adds motion which friction or collision stops
{                           //dir variable used for other sprite changes
motion_add(90,1)            //Change sprite to facing up
dir=90                      //Adding pixels and motion has the best result i've found
y-=5
sprite_index=spr_gatherer_walk_up
image_speed=1;
}

if down then                 
{                           
motion_add(270,1)            
dir=270
y+=5
sprite_index=spr_gatherer_walk_down
}

if right then                 
{                           
motion_add(0,1)            
dir=0
x+=5
sprite_index=spr_gatherer_walk_right
}

if left then                 
{                           
motion_add(180,1)            
dir=180
x-=5
sprite_index=spr_gatherer_walk_left
}

if speed&gt;max_speed {
speed=max_speed}

if !upkey &amp;&amp; !downkey &amp;&amp; !leftkey &amp;&amp; !rightkey then
      {if sprite_index= spr_gatherer_walk_up then
      {sprite_index=spr_gatherer_idle_up
      dir=90}
      if sprite_index= spr_gatherer_walk_right then
      {sprite_index=spr_gatherer_idle_right
      dir=0}
      if sprite_index= spr_gatherer_walk_left then
      {sprite_index=spr_gatherer_idle_left
      dir=180}
      if sprite_index= spr_gatherer_walk_down then
      {sprite_index=spr_gatherer_idle_down
      dir=270}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sword

if keyboard_check_pressed(vk_space)
{instance_create(x,y,obj_sword)
if dir=0 then {sprite_index=spr_gatherer_sword_right}
if dir=90 then {sprite_index=spr_gatherer_sword_up}
if dir=180 then {sprite_index=spr_gatherer_sword_left}
if dir=270 then {sprite_index=spr_gatherer_sword_down}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_soul">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gathinv[2,1]++;
with (other) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop
x = round(x)   //round to nearest x and y pixel
y = round(y) //so player doesn't stop between pixels
move_outside_solid(direction,speed) //moves outside object
move_contact_solid(direction,speed) //moves to contact right beside the object
speed=0     //stops player
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_crafterhut">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let Controller start resource transfer

    with (obj_controller) {
        transfer=true;
        event_perform(ev_alarm,0);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop
x = round(x)   //round to nearest x and y pixel
y = round(y) //so player doesn't stop between pixels
move_outside_solid(direction,speed) //moves outside object
move_contact_solid(direction,speed) //moves to contact right beside the object
speed=0     //stops player
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_armyleader">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop
x = round(x)   //round to nearest x and y pixel
y = round(y) //so player doesn't stop between pixels
move_outside_solid(direction,speed) //moves outside object
move_contact_solid(direction,speed) //moves to contact right beside the object
speed=0     //stops player
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.gathshowinv=false {
    global.gathshowinv=true
    }
else {
global.gathshowinv=false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
