<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
ii=0;
ll=noone;
global.armycount=60; 
transfer=false;
transferb=false;
u=0;
army_count=60  //how many army players are available?
global.num=0;  //change to an array?
global.marker=false;                                                //show marker?
global.grid=mp_grid_create(0,0,room_width/16,room_height/16,16,16); //create grid
mp_grid_add_instances(global.grid,obj_solid,1); //add solids to pathfinding gid
global.grouppath=ds_list_create();
global.commui=false;
global.count=0;
global.dx=0
global.dy=0
global.selection="inv";

global.btdone=false;
global.tower[0]=spr_tower_0
global.tower[1]=spr_tower_1
global.tower[2]=spr_tower_2
global.tower[3]=spr_tower_3
global.wall[0]=spr_bar_vertical
global.wall[1]=spr_bar_diagonal_right
global.wall[2]=spr_bar_horizontal
global.wall[3]=spr_bar_diagonal_left
global.build[0,0]=spr_barricade_icon;
global.build[1,0]=spr_spikes_icon;
global.build[2,0]=spr_tower_icon;
global.build[3,0]=spr_arrow
global.build[0,1]=20;
global.build[1,1]=3;
global.build[2,1]=1;
global.build[3,1]=20;
shot=0
global.timerscore=0;
alarm[3]=30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.tutorialprogress=0 {
    global.tutorialprogress=noone;
    show_message("The enemies are approaching, gather wood!");
}
if global.tutorialprogress=2 {
      global.tutorialprogress=noone;
        show_message("Use the workbench to craft a barricade!");
}
if global.tutorialprogress=4 {
    global.tutorialprogress=noone;
    show_message("Click the crafterhut to retrieve your barricade.
    Place it to defend the town gate");
}
if global.tutorialprogress=5 {
    global.tutorialprogress=noone;
    show_message("An attack is approaching, deploy some minions");
    global.tutorial=false;
    instance_create(928,1424,obj_spawn);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.timerscore++;
alarm[3]=30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if transferb=true {
if (u=20) {                                               //if the text rises 20 pixels
        u=0;
        if ii=spr_barricade_icon &amp;&amp; global.buildertransfer[1]&gt;0 {
            ii=spr_spikes_icon;
            alarm[2]=2;
            ll=1
        }
        else if ii=spr_spikes_icon &amp;&amp; global.buildertransfer[2]&gt;0 {
            ii=spr_tower_icon;
            alarm[2]=2;
            ll=2
        }
        else {
            transferb=false;
            ll=noone;
            alarm[2]=2
        }
}
            
else {
    u++;                                      //rise the text
    alarm[2]=2
    }
}
else {
    global.build[0,1]+=global.buildertransfer[0];
    global.build[1,1]+=global.buildertransfer[1];
    global.build[2,1]+=global.buildertransfer[2];
    global.buildertransfer[0]=0;
    global.buildertransfer[1]=0;
    global.buildertransfer[2]=2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn minions
if global.count&gt;0 {
    instance_create(obj_commanderhut.x-20,obj_commanderhut.y + 60,obj_armyleader);
    global.count--
    alarm[1]=60;
}
else {
    global.dx=0
    global.dy=0
    global.armycount-=global.count;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tranfer from Gatherer to Crafter
var exists,done
exists=false;
done=false;
if transfer=true {
if (u=20) {                                               //if the text rises 20 pixels
        u=0;
        if ii&lt;array_height_2d(global.gathinv)-1 {
        if exists=false {
        for (var j=0;j&lt;4;j++) {
            for (var i=0;i&lt;9;i++) {
                
                    if ds_grid_value_exists(global.crafitem,i,j,i,j,global.gathinv[ii,0]) {
                        global.crafamount[#i,j]+=global.gathinv[ii,1];
                        exists=true; 
                    }
                    if exists=true break;
                }
            if exists=true break;
            }
        }
                if exists=false {
                for (var j=0;j&lt;4;j++) {
                     for (var i=0;i&lt;9;i++) {
                            if ds_grid_value_exists(global.crafitem,i,j,i,j,0) {
                                global.crafitem[#i,j]=global.gathinv[ii,0];
                                global.crafamount[#i,j]+=global.gathinv[ii,1];
                                done=true;
                        }
                        if done=true break;
                    }
                if done=true break
                }
            }
        
                    
             //transfer
            global.gathinv[ii,1]=0;
            ii++;
            alarm[0]=2;   
        }
        else if ii=array_height_2d(global.gathinv)-1 { 
            if exists=false{ 
            for (var j=0;j&lt;4;j++) {
                for (var i=0;i&lt;9;i++) {
                    if ds_grid_value_exists(global.crafitem,i,j,i,j,global.gathinv[ii,0]) {
                        global.crafamount[#i,j]+=global.gathinv[ii,1];
                        exists=true; 
                    }
                if exists=true break;
                }
            if exists=true break;
            }
        }
                if exists=false {
                for (var j=0;j&lt;4;j++) {
                     for (var i=0;i&lt;9;i++) {
                        if ds_grid_value_exists(global.crafitem,i,j,i,j,0) {
                                global.crafitem[#i,j]=global.gathinv[ii,0];
                                global.crafamount[#i,j]+=global.gathinv[ii,1]; 
                                done=true;
                        }
                        if done=true break;
                    }
                if done=true break;
                }   
             }
            global.gathinv[ii,1]=0;                       //set to 0
            transfer=false;                               //stop transfer
            ii=0;                                         //next resource
          
        }
                                   
    }

else {
    u+=1;                                       //rise the text
    alarm[0]=2
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create minions in gui
var i;
 for (i=1;i&lt;=global.armycount;i+=1) {
             instance_create(view_xview[2]+25+((i mod 20)*25),view_yview[2]+25+((i div 20))*25,obj_armygui);  //loop that draws number of army in columns and rows
             global.num=i;
  }
  randomize();
  if global.tutorial=false {
    instance_create(928,1424,obj_spawn);
  }
  global.tutorialprogress=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_destroy(global.grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tutorial
if global.tutorial=true {
    if global.tutorialprogress=0 { 
        if view_current=0 {
            draw_set_alpha(0.4)
            draw_rectangle_color(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],c_black,c_black,c_black,c_black,false)
            draw_set_alpha(1)
            draw_sprite(spr_tut_gath,0,view_xview[0],view_yview[0]);
            if alarm[4]=-1 {
                alarm[4]=60;
            }
        }
    }
    if global.tutorialprogress=1 {
        if view_current=0 {
            draw_sprite(spr_show,0,obj_crafterhut.x+100,obj_crafterhut.y-100)
        }
    }
    if global.tutorialprogress=2 { 
        if view_current=3 {
            draw_set_alpha(0.4)
            draw_rectangle_color(view_xview[3],view_yview[3],view_xview[3]+view_wview[3],view_yview[3]+view_hview[3],c_black,c_black,c_black,c_black,false)
            draw_set_alpha(1)
            draw_sprite(spr_tut_craf,0,view_xview[3],view_yview[3]);
            if alarm[4]=-1 {
                alarm[4]=60;
            }
        }
    }
    if global.tutorialprogress=4 {
        if view_current=1 {
            draw_set_alpha(0.4)
            draw_rectangle_color(view_xview[1],view_yview[1],view_xview[1]+view_wview[1],view_yview[1]+view_hview[1],c_black,c_black,c_black,c_black,false)
            draw_set_alpha(1)
            draw_sprite(spr_tut_build,0,view_xview[1],view_yview[1]);
            if alarm[4]=-1 {
                alarm[4]=60;
            }
        }
    }
    if global.tutorialprogress=5 {
            if view_current=2 {
            draw_set_alpha(0.4)
            draw_rectangle_color(view_xview[2],view_yview[2],view_xview[2]+view_wview[2],view_yview[2]+view_hview[2],c_black,c_black,c_black,c_black,false)
            draw_set_alpha(1)
            draw_sprite(spr_tut_comm,0,view_xview[2],view_yview[2]);
            if alarm[4]=-1 {
                alarm[4]=60;
            }
        }
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Comm &amp;&amp; Gath UI
if (view_current=2)  {
    if global.commui=true {
        draw_set_alpha(0.8);
        draw_sprite(spr_comm_ui,0,view_xview[2],view_yview[2]); //draw armycount gui
        draw_set_alpha(1);     
    }
}

if global.gathshowinv=1 {
    if (view_current==0) {
        draw_set_alpha(0.7)
        draw_sprite(spr_comm_ui,0,view_xview[0],view_yview[0]+view_hview[0]-100);
        draw_set_alpha(1);
        draw_set_halign ( fa_left )
        for (var i=0;i+1&lt;=array_height_2d(global.gathinv);i++) {
            draw_sprite_stretched(global.gathinv[i,0],0,view_xview[0]+25+i*60,view_yview[0]+view_hview[0]-60,32,32)
            draw_text_color(view_xview[0]+50+i*60,view_yview[0]+view_hview[0]-30,global.gathinv[i,1],c_white,c_white,c_white,c_black,1);
        }
    }
}

if transfer=true {
    if ii&lt;array_height_2d(global.gathinv) {
        draw_set_halign ( fa_left )
        if global.gathinv[ii,1]&gt;0 {
            
            if view_current==0 {
            draw_text(obj_crafterhut.x+60,obj_crafterhut.y-u,"+" + string(global.gathinv[ii,1]));
            draw_sprite_stretched(global.gathinv[ii,0],0,obj_crafterhut.x+100,obj_crafterhut.y-u,16,16)
            }
            draw_sprite_stretched(global.gathinv[ii,0],0,view_xview[3]+50,view_yview[3]+25,16,16);
            draw_set_color(c_white);
            draw_text(view_xview[3]+70,view_yview[3]+25,"+" + string(global.gathinv[ii,1]))
            draw_set_color(c_black);
        }
        else {
            ii+=1;
            }
        }
    else {     
        ii=0;
        transfer=false;
    }
}
if instance_exists(obj_gatherer) {
if view_current==0 {
    draw_healthbar(view_xview[0]+25,view_yview[0]+25,view_xview[0]+view_wview[0]-25,view_yview[0]+30,(obj_gatherer.h/1000)*100,"",c_red,c_green,0,0,1);
    }
}
else {
    if view_current==0 {
        draw_set_color(c_black);
        draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],0)
    }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Furnace GUI
if global.furnaceui=true {
    draw_set_halign ( fa_right );
    draw_enable_alphablend(false);
    draw_sprite(spr_ui_furnace,0,view_xview[3],view_yview[3]);
    draw_enable_alphablend(true);
    var spaceh,spacev,height,length,indentv,indenth,dif;
    indenth=14;
    indentv=14;
    spaceh=55;
    spacev=52;
    length=4;
    height=9;
    dif=36;
    for (var i=0;i&lt;9;i++) {
        for (var j=0;j&lt;4;j++) {
            if global.crafamount[#i,j]&gt;0 {
                draw_sprite_stretched(global.crafitem[#i,j],0,view_xview[3]+indenth+j*spaceh,view_yview[3]+indentv+i*spacev,32,32)
                draw_text_colour(view_xview[3]+indenth+dif+j*spaceh,view_yview[3]+indentv+dif-8+i*spacev,global.crafamount[#i,j],c_white,c_white,c_white,"",1); 
            }
        }
    }
    if global.ignite=true {
        draw_sprite(spr_fire,-1,view_xview[3]+367,view_yview[3]+222)
    }
    for (var i=0;i&lt;3;i++) {
        if global.furnace[#i,1]&gt;0 {
                draw_sprite(global.furnace[#i,0],0,view_xview[3]+345+i*65,view_yview[3]+124)
                draw_text_colour(view_xview[3]+345+46+i*65,view_yview[3]+124+46,global.furnace[#i,1],c_white,c_white,c_white,"",1); 
            }
        }
    for (var i=0;i&lt;2;i++) {
        if global.furnaceoutput[#i,1]&gt;0 {
            draw_sprite(global.furnaceoutput[#i,0],0,view_xview[3]+378+i*65,view_yview[3]+286)
            draw_text_colour(view_xview[3]+378+46+i*65,view_yview[3]+286+46,global.furnaceoutput[#i,1],c_white,c_white,c_white,"",1); 
         }
       }
     
     if global.selectx!=-1&amp;&amp;global.selecty!=-1 {
        if global.selection="inv" {
          if obj_crafter.select=true {

            draw_sprite_stretched(global.spriteselect,0,view_xview[3]+indenth-3+(global.selectx*spaceh),view_yview[3]+indentv+(global.selecty*spacev),32,32);
            
            draw_text_color(view_xview[3]+indenth-3+dif+(global.selectx*spaceh),view_yview[3]+indentv+dif+(global.selecty*spacev),global.amountselect,c_white,c_white,c_white,c_black,1);
            }           
            draw_sprite(spr_select_vertical,0,view_xview[3]+indenth-2+(global.selectx*spaceh),view_yview[3]+indentv-3+(global.selecty*spacev));
        }
        if global.selection="furnace" {
            if obj_crafter.select=true {
                draw_sprite(global.spriteselect,0,view_xview[3]+345+(global.selectx*65),view_yview[3]+124);
                draw_text_color(view_xview[3]+345+46+(global.selectx*65),view_yview[3]+124+46,global.amountselect,c_white,c_white,c_white,c_black,1);
            }
        draw_sprite(spr_select,0,view_xview[3]+341+(global.selectx*69),view_yview[3]+125);
        }
        if global.selection="output" {
            if obj_crafter.select=true {
                draw_sprite(global.spriteselect,0,view_xview[3]+378+(global.selectx*65),view_yview[3]+286)
                draw_text_colour(view_xview[3]+378+46+(global.selectx*65),view_yview[3]+286+43,global.amountselect,c_white,c_white,c_white,"",1); 
            } 
            draw_sprite(spr_select,0,view_xview[3]+378+(global.selectx*65),view_yview[3]+286);
    }
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crafter inventory
if global.invui=true {
    draw_set_halign ( fa_right )
    draw_enable_alphablend(false);
    draw_sprite(spr_ui_inv,0,view_xview[3],view_yview[3]);
    draw_enable_alphablend(true);
    var spaceh,spacev,height,length,indentv,indenth,dif;
    indenth=33;
    indentv=104;
    spaceh=66;
    spacev=70;
    length=9;
    height=4;
    dif=44;
    for (var j=0;j&lt;4;j++) {
        for (var i=0;i&lt;9;i++) {
            if global.crafamount[#i,j]&gt;0 {
                draw_sprite(global.crafitem[#i,j],0,view_xview[3]+indenth+i*spaceh,view_yview[3]+indentv+j*spacev)
                draw_text_colour(view_xview[3]+indenth+dif+i*spaceh,view_yview[3]+indentv+dif-3+j*spacev,global.crafamount[#i,j],c_white,c_white,c_white,c_black,1); 
            }
        }
    }
    if global.selectx!=-1&amp;&amp;global.selecty!=-1 {
    if obj_crafter.select=true {
        draw_sprite(global.spriteselect,0,view_xview[3]+indenth-3+(global.selectx*spaceh),view_yview[3]+indentv+(global.selecty*spacev));
        draw_text_color(view_xview[3]+indenth-3+dif+(global.selectx*spaceh),view_yview[3]+indentv+dif+(global.selecty*spacev),global.amountselect,c_white,c_white,c_white,c_black,1);
        }
    draw_sprite(spr_select,0,view_xview[3]+indenth-3+(global.selectx*spaceh),view_yview[3]+indentv+(global.selecty*spacev))
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Builder
if transferb=true {
    if (view_current==1) {
        draw_text(view_xview[1]+25,view_yview[1]+75+u,"+ " + string(global.buildertransfer[ll]));
        draw_sprite_stretched(ii,0,view_xview[1]+50,view_yview[1]+70+u,58,58);
        }
    }

if global.buildui=true {
    if (view_current==1) {
        draw_set_alpha(0.7)
        draw_sprite_stretched(spr_comm_ui,0,view_xview[1],view_yview[1]+view_hview[1]-125,800,125);
        draw_set_alpha(1);
        draw_set_halign ( fa_left )
        for (var i=0;i&lt;3;i++) {
            if obj_mouse.selection!=i {
                draw_sprite_stretched(global.build[i,0],0,view_xview[1]+31.5+i*75,view_yview[1]+view_hview[1]-75,58,58);
            }
            draw_text_color(view_xview[1]+75+i*75,view_yview[1]+view_hview[1]-30,global.build[i,1],c_white,c_white,c_white,c_black,1);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Workbench UI
if global.workui=true {
    draw_set_halign ( fa_right );
    draw_enable_alphablend(false);
    draw_sprite(spr_workbench_ui,0,view_xview[3],view_yview[3]);
    draw_enable_alphablend(true);
    if global.selection="choose" {
    draw_sprite(spr_craft,0,view_xview[3]+374,view_yview[3]+395)
    }
    
    var spaceh,spacev,height,length,indentv,indenth,dif;
    indenth=14;
    indentv=14;
    spaceh=55;
    spacev=52;
    length=4;
    height=9;
    dif=36;
    for (var i=0;i&lt;9;i++) {
        for (var j=0;j&lt;4;j++) {
            if global.crafamount[#i,j]&gt;0 {
                draw_sprite_stretched(global.crafitem[#i,j],0,view_xview[3]+indenth+j*spaceh,view_yview[3]+indentv+i*spacev,32,32)
                draw_text_colour(view_xview[3]+indenth+dif+j*spaceh,view_yview[3]+indentv+dif-8+i*spacev,global.crafamount[#i,j],c_white,c_white,c_white,"",1); 
            }
        }
    }
    
    for (var i=0;i&lt;5;i++) {
                draw_sprite(global.workbench[i],0,view_xview[3]+274+i*67,view_yview[3]+136)
            
        }
    if global.selection="choose" {
    if global.selectx&gt;-1 {
    draw_sprite(spr_select,0,view_xview[3]+274+global.selectx*67,view_yview[3]+136);
    draw_set_halign ( fa_left );
    draw_text(view_xview[3]+390,view_yview[3]+405,global.total);
    }
    }
    if global.selection="craft" {
         draw_sprite(spr_craft_select,0,view_xview[3]+374,view_yview[3]+395);
         draw_set_halign ( fa_left );
         draw_text(view_xview[3]+390,view_yview[3]+405,global.amount);
    }
    
    if global.selectx=0 {
        if obj_crafter.total1&gt;0 {
        draw_sprite(spr_spear,0,view_xview[3]+365,view_yview[3]+270);
        draw_text_color(view_xview[3]+405,view_yview[3]+310,5,c_white,c_white,c_white,c_black,1);
        }
        else {
        draw_sprite_ext(spr_spear,0,view_xview[3]+365,view_yview[3]+270,image_xscale,image_yscale,0,c_black,1);
        draw_text_color(view_xview[3]+405,view_yview[3]+310,5,c_black,c_black,c_black,c_white,1);
        }
        if obj_crafter.total2&gt;0 {
        draw_sprite(spr_plank,0,view_xview[3]+440,view_yview[3]+270);
        draw_text_color(view_xview[3]+500,view_yview[3]+310,1,c_white,c_white,c_white,c_black,1);
        }
        else {
        draw_sprite_ext(spr_plank,0,view_xview[3]+440,view_yview[3]+270,image_xscale,image_yscale,0,c_black,1);
        draw_text_color(view_xview[3]+500,view_yview[3]+310,1,c_black,c_black,c_black,c_gray,1);
        }  
    }
    if global.selectx=1 {
        if obj_crafter.total1&gt;0 {
        draw_sprite(spr_icon_wood,0,view_xview[3]+400,view_yview[3]+270);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,1,c_white,c_white,c_white,c_black,1);
        }
        else {
        draw_sprite_ext(spr_icon_wood,0,view_xview[3]+400,view_yview[3]+270,image_xscale,image_yscale,0,c_black,1);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,1,c_black,c_black,c_black,c_gray,1);
        }
    }
    if global.selectx=2 {
        if obj_crafter.total1&gt;0 {
        draw_sprite(spr_icon_wood,0,view_xview[3]+400,view_yview[3]+270);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,5,c_white,c_white,c_white,c_black,1);
        }
        else {
        draw_sprite_ext(spr_icon_wood,0,view_xview[3]+400,view_yview[3]+270,image_xscale,image_yscale,0,c_black,1);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,5,c_black,c_black,c_black,c_gray,1);
        }
    }
    
    if global.selectx=3 {
        if obj_crafter.total1&gt;0 {
        draw_sprite(spr_icon_metal,0,view_xview[3]+400,view_yview[3]+270);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,10,c_white,c_white,c_white,c_black,1);
        }
        else {
        draw_sprite_ext(spr_icon_metal,0,view_xview[3]+400,view_yview[3]+270,image_xscale,image_yscale,0,c_black,1);
        draw_text_color(view_xview[3]+450,view_yview[3]+310,10,c_black,c_black,c_black,c_gray,1);
        }
    }

    if global.selectx=4 {
        ///
        ///
        ///
    }
    
    if global.timer&gt;0 {
        draw_healthbar(view_xview[3]+250,view_yview[3]+215,view_xview[3]+613,view_yview[3]+224,100-((global.timer/global.timermax)*100),0,c_gray,c_black,0,false,false);
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crafter transfer
if global.btdone=false {
if obj_crafter.item!=-1 {
    draw_sprite(obj_crafter.item,0,view_xview[3]+50,view_yview[3]+25+obj_crafter.u);
    if obj_crafter.item=spr_barricade_icon {
        draw_set_color(c_white);
        draw_text( view_xview[3]+25,view_yview[3]+25+obj_crafter.u,"- " + string(global.buildertransfer[0]));
    }
       if obj_crafter.item=spr_spikes_icon {
        draw_set_color(c_white)
        draw_text( view_xview[3]+25,view_yview[3]+25+obj_crafter.u,"- " + string(global.buildertransfer[1]));
    }
       if obj_crafter.item=spr_tower_icon {
        draw_text( view_xview[3]+25,view_yview[3]+25+obj_crafter.u,"- " + string(global.buildertransfer[2]));
        draw_set_color(c_black);
    }
}
}
if view_current=1 {
if global.btg=true {
    draw_sprite(spr_crafter_glow,0,obj_crafterhut.x,obj_crafterhut.y)
}
}
        
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screen_save("shot"+string(shot)+".png")
shot++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
